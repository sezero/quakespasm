#ifndef QLIB_H
#define QLIB_H

#define QEXT_VERSION 1

/*
==============
functions
==============
*/

#if defined(__linux__)
    #define QEXTFN
#elif defined(WIN32)
    #if defined(_MSVC_VER)
        #define QEXTFN __declspec (dllexport)
    #else
        #define QEXTFN __attribute__((dllexport))
    #endif
#else
    #error Not supported platform.
#endif

#define QEXTFNVER                           \
    QEXTFN int qextension_version (void)    \
    {                                       \
        return QEXT_VERSION;                \
    }

/*
==============
types
==============
*/

// typedefs
typedef int  string_t;
typedef int  func_t;
typedef float vec_t;
typedef vec_t vec3_t[3];
typedef int	qboolean;

// generated by qcc
#include "progdefs.h"

// protocol.h
typedef struct
{
	vec3_t		origin;
	vec3_t		angles;
	unsigned short 	modelindex;	//johnfitz -- was int
	unsigned short 	frame;		//johnfitz -- was int
	unsigned char 	colormap;	//johnfitz -- was int
	unsigned char 	skin;		//johnfitz -- was int
	unsigned char	alpha;		//johnfitz -- added
	unsigned char	scale;		//Quakespasm: for model scale support.
	int		effects;
} entity_state_t;

// common.h
typedef struct link_s
{
	struct link_s	*prev, *next;
} link_t;

// progs.h
#define	MAX_ENT_LEAFS	32
typedef struct edict_s
{
	qboolean	free;
	link_t		area;

	int		num_leafs;
	int		leafnums[MAX_ENT_LEAFS];

	entity_state_t	baseline;
	unsigned char	alpha;
	unsigned char	scale;
	qboolean	sendinterval;
	float		oldframe;
	float		oldthinktime;

	float		freetime;
	entvars_t	v;

	/* other fields from progs come immediately after */
} edict_t;

/*
==============
helpers
==============
*/

#define QV3FMT      "(%5.1f, %5.1f, %5.1f)"
#define QV3ARG(v)   v[0], v[1], v[2]

#endif
